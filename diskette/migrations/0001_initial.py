# Generated by Django 4.2.11 on 2024-11-11 03:31

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="APIkey",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="creation date",
                    ),
                ),
                (
                    "key",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Public key to use in requests to Diskette API.",
                        unique=True,
                        verbose_name="public key",
                    ),
                ),
                (
                    "deprecated",
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        help_text="Depreciated keys are not available anymore for usage but are keeped for history. WARNING: Deprecation can not be reversed.",
                        verbose_name="deprecated",
                    ),
                ),
            ],
            options={
                "verbose_name": "API key",
                "verbose_name_plural": "API keys",
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="DumpFile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="creation date",
                    ),
                ),
                (
                    "processed",
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        default=None,
                        null=True,
                        verbose_name="processed date",
                    ),
                ),
                (
                    "status",
                    models.SmallIntegerField(
                        choices=[
                            (0, "created"),
                            (10, "pending"),
                            (20, "failed"),
                            (30, "processed"),
                        ],
                        db_index=True,
                        default=0,
                        help_text="Process status.",
                        verbose_name="status",
                    ),
                ),
                (
                    "with_data",
                    models.BooleanField(
                        blank=True,
                        default=True,
                        help_text="This dump contains data.",
                        verbose_name="with data",
                    ),
                ),
                (
                    "with_storage",
                    models.BooleanField(
                        blank=True,
                        default=True,
                        help_text="This dump contains storage medias.",
                        verbose_name="with storage",
                    ),
                ),
                (
                    "deprecated",
                    models.BooleanField(
                        blank=True,
                        db_index=True,
                        default=False,
                        help_text="A deprecated dump can not be downloaded anymore. WARNING: Deprecation can not be reversed.",
                        verbose_name="deprecated",
                    ),
                ),
                (
                    "path",
                    models.TextField(
                        blank=True,
                        default='',
                        help_text="Dump file path relatively to setting 'DISKETTE_DUMP_PATH'. A deprecated dump will have its path prefixed with 'removed:/' once it has been purged.",
                        verbose_name='path',
                    ),
                ),
                (
                    "checksum",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="A blake2 hash for dump file checksum. Use command 'b2sum yourfile.tar.gz' to get checksum of downloaded file and compare it to this one.",
                        max_length=128,
                        verbose_name="checksum",
                    ),
                ),
                (
                    "size",
                    models.BigIntegerField(
                        blank=True,
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="archive size",
                    ),
                ),
                (
                    "logs",
                    models.TextField(
                        blank=True, default="", verbose_name="process logs"
                    ),
                ),
            ],
            options={
                "verbose_name": "Dump",
                "verbose_name_plural": "Dumps",
                "ordering": ["-created"],
            },
        ),
    ]
